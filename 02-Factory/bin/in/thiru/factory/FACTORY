02]FACTORY DESIGN PATTERN[Also called as OPEN CLOSED PRINCIPLE]SOLID[O]
=======================
Class should be open for extension closed for modification
// Notification interface
interface Notification {
    void sendNotification();
}

// Concrete SMS notification class
class SMSNotification implements Notification {
    @Override
    public void sendNotification() {
        System.out.println("Sending SMS notification...");
        // Logic for sending SMS notification
    }
}

// Concrete email notification class
class EmailNotification implements Notification {
    @Override
    public void sendNotification() {
        System.out.println("Sending Email notification...");
        // Logic for sending email notification
    }
}

// Concrete push notification class
class PushNotification implements Notification {
    @Override
    public void sendNotification() {
        System.out.println("Sending Push notification...");
        // Logic for sending push notification
    }
}

===========================================================================================
// Notification factory class
class NotificationFactory {
    public Notification createNotification(String type) {
        switch (type) {
            case "SMS":
                return new SMSNotification();
            case "Email":
                return new EmailNotification();
            case "Push":
                return new PushNotification();
            default:
                throw new IllegalArgumentException("Invalid notification type");
        }
    }
}

OR
// Notification factory class
class NotificationFactory {
    public Notification createNotification(String type) {
        if (type.equalsIgnoreCase("SMS")) {
            return new SMSNotification();
        } else if (type.equalsIgnoreCase("Email")) {
            return new EmailNotification();
        } else if (type.equalsIgnoreCase("Push")) {
            return new PushNotification();
        } else {
            throw new IllegalArgumentException("Invalid notification type");
        }
    }
}
===========================================================================================

public class Main {
    public static void main(String[] args) {
        NotificationFactory factory = new NotificationFactory();

        // Create SMS notification
        Notification smsNotification = factory.createNotification("SMS");
        smsNotification.sendNotification();

        // Create Email notification
        Notification emailNotification = factory.createNotification("Email");
        emailNotification.sendNotification();

        // Create Push notification
        Notification pushNotification = factory.createNotification("Push");
        pushNotification.sendNotification();
    }
}